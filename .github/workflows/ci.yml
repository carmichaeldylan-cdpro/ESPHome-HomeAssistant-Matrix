name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    name: Building ${{ matrix.file }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file:
          - smartmatrix.yaml
          - smartmatrix_trinity.yaml
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      
      - name: Build ESPHome firmware
        id: esphome-build
        uses: esphome/build-action@v1.5.2
        with:
          yaml_file: ${{ matrix.file }}
      
      - uses: frabert/replace-string-action@v2
        id: replacer
        with:
          pattern: '(.*)(\.yaml)'
          string: ${{ matrix.file }}
          replace-with: '$1.bin'
      
      - name: Rename firmware image to match yaml
        run: |
          SOURCE_FILE=${{ matrix.file }}
          OUTPUT_FILE=${SOURCE_FILE/yaml/bin}
          mkdir firmware && mv "${{ steps.esphome-build.outputs.name }}/${{ steps.esphome-build.outputs.name }}.bin" firmware/$OUTPUT_FILE

      - uses: actions/upload-artifact@v3.1.2
        with:
          name: firmware
          path: firmware

  release:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:    
      - name: Checkout source code
        uses: actions/checkout@v2
        
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: firmware
      
      - name: Get short SHA
        id: get_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      - name: test 
        run: ls -lah ${{steps.download.outputs.download-path}}
      
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ steps.get_sha.outputs.sha_short }}
          tag: ${{ steps.get_sha.outputs.sha_short }}
          commit: ${{ github.sha }}
          artifacts: "${{steps.download.outputs.download-path}}/firmware/*.bin"
          draft: true
          generateReleaseNotes: true
